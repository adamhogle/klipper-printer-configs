[gcode_macro PRINT_START]
description: used at the start of a print
# Parameter "BED": desired temperature of bed
# Parameter "EXTRUDER": desired temperature of extruder
# Parameter "NOZZLE": expected size of nozzle
gcode:
    # Verify we got our parameters
    {action_raise_error("missing 'bed' parameter") if params.BED is not defined else action_respond_info("Desired bed temp: " + params.BED)}
    {action_raise_error("missing 'extruder' parameter") if params.EXTRUDER is not defined else action_respond_info("Desired extruder temp: " + params.EXTRUDER)}
    {action_raise_error("missing 'nozzle' parameter") if params.NOZZLE is not defined else action_respond_info("Expected nozzle size: " + params.NOZZLE)}

    # Verify this was sliced for our printer
    {action_raise_error("Nozzle mismatch") if printer.configfile.config.extruder["nozzle_diameter"]|float != params.NOZZLE|float}
    ; TODO: add check for current filament

    # Prepare to print
    M107                           ; turn off all fans
    G28 X Y                        ; home X/Y so we can move the nozzle out of the way
    M140 S{params.BED|float}       ; start heating bed
    M109 S170                      ; warm up extruder a little bit (but not enough to drip)
    M190 S{params.BED|float}       ; wait on bed temp
    G28 Z                          ; home Z axis (with heat)
    # should be sitting at 0,0,5

    # Initial setup for running gcode
    G21                            ; set units to millimeters; slicer expects this
    G90                            ; absolute positioning; slicer expects this
    G92 E0                         ; reset extruder position
    M83                            ; relative extruder position; slicer configured to use this

    # do a small wipe to prime the nozzle at the front of the bed (taken from Prusa Mini+)
    G0 X120 Y119 Z25 F20000        ; move to back-right of bed
    M109 S{params.EXTRUDER}        ; wait on full extruder temp
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1 
    G1 E4.0 F3600                  ; Un-retract filament from PRINT_END
	G0 Z0.3 F3600                  ; move down to 0.3mm above the bed
    G1 X60 E16 F4800               ; extrude at width 1.6mm  for 60mm at 80mm/s
    G1 X0 E8 F6000                 ; extrude at width 0.??mm for 60mm at 100mm/s
    G1 X5 E-0.1 F6000              ; wipe the tip for 2mm and retract
    G92 E0                         ; reset extruder position
    M83                            ; relative extruder position; slicer configured to use this
    
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X{max_x} Y{max_y} F3600     ; park nozzle at rear
    
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT


# Support PRUSA-style filament changes
[gcode_macro M600]
gcode:
    PAUSE                ; Pause

